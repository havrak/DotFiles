#!/usr/bin/bash
if [ -z $1 ]; then
	echo "Usage: in case no flag is given script toggles scratchpad window if window in argument doesn't exists script rsw will be called with same argument as was scratchpad and such window will be created."
	echo "In case flag -h or argument --hide is used program will hide every window given as argument after the flag."
	exit
fi

if [ "$1" == "--hide" ] || [ "$1" == "-h" ]; then
	for var in $@ ; do
		if [ ! "$var" == "--hide" ] && [ ! "$var" == "-h" ] ; then
			pids=$(xdotool search --class ${var})
			for pid in $pids; do
				echo $pid
				if ! bspc query -N -n "$pid.hidden" > /dev/null; then
					bspc node $pid --flag hidden -f
				fi
			done
		fi
	done
	exit
fi

pids=$(xdotool search --class ${1})

if [ -z "$pids" ] ; then
	rsw $1
	while [ -z "$pids"]; do
		pids=$(xdotool search --class ${1})
	done
fi

[ "$(wc -w <<< "$pids")" -gt "1" ] && notify-send -t 800 " multiple same $1's open"


for pid in $pids; do
	if bspc query -N -n "$pid.hidden" > /dev/null; then
		if [ $(bspc query -M | wc -l) -gt "1" ]; then
			if [ -n "$(xrandr | grep "connected 3840x2160")" ]; then
				if [ $(bspc query -M -m --names) == "eDP1" ] ; then
					xdotool windowmove $pid 50% 83%
				else
					xdotool windowmove $pid 50% 30%
				fi
			else
				if [ $(bspc query -M -m --names) == "eDP1" ] ; then
					xdotool windowmove $pid 50% 75%
				else
					xdotool windowmove $pid 50% 25%
				fi
			fi
		else
			xdotool windowmove $pid 50% 50%
		fi
		width=$(($(xdotool getwindowgeometry --shell $pid | grep WIDTH | awk -F "=" '{print $2}')/2))
		height=$(($(xdotool getwindowgeometry --shell $pid | grep HEIGHT | awk -F "=" '{print $2}')/2))
		xdotool windowmove --relative $pid -$width -$height
	fi
	bspc node $pid --flag hidden -f
done
exit

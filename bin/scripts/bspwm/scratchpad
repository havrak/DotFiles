#!/usr/bin/bash

if [ -z $1 ]; then
	echo "Usage: in case no flag is given script toggles scratchpad window if window in argument doesn't exists script rsw will be called with same argument as was scratchpad and such window will be created."
	echo "In case flag -h or argument --hide is used program will hide every window given as argument after the flag."
	exit
	fi


	if [ "$1" == "--hide" ] || [ "$1" == "-h" ]; then
		for var in $@ ; do
			if [ ! "$var" == "--hide" ] && [ ! "$var" == "-h" ] ; then
				pids=$(xdotool search --class ${var})
				for pid in $pids; do
					echo $pid
					if ! bspc query -N -n "$pid.hidden" > /dev/null; then
						bspc node $pid --flag hidden -f
					fi
				done
			fi
		done
		exit
	fi

	pids=$(xdotool search --class ${1})

	if [ -z "$pids" ] ; then
		rsw $1
		while [[ -z "$pids" ]]; do
			pids=$(xdotool search --class ${1})
		done
	fi

	[ "$(wc -w <<< "$pids")" -gt "1" ] && notify-send -t 800 " multiple same $1's open"


	for pid in $pids; do
		if bspc query -N -n "$pid.hidden" > /dev/null; then
			case $(cat /tmp/bswpm_screenlayout) in
				"ultra") # 2560x1080 connected to DP1
					EDP1_X=50 EDP1_Y=75
					HDMI1_X=0 HDMI1_Y=0
					DP1_X=50 DP1_Y=25 ;;
				"4k") # 3840x2160 connected to DP1
					EDP1_X=48 EDP1_Y=83
					HDMI1_X=0 HDMI1_Y=0
					DP1_X=50 DP1_Y=31 ;;
				"triple") # 1920x1080 connected to HDMI1 and DP1
					EDP1_X=25 EDP1_Y=75
					HDMI1_X=25 HDMI1_Y=25
					DP1_X=75 DP1_Y=25 ;;
				"1080p") # 1920x1080 connected to HDMI1
					EDP1_X=50 EDP1_Y=75
					HDMI1_X=50 HDMI1_Y=25
					DP_X=0 DP1_Y=0 ;;
				*)
					EDP1_X=50 EDP1_Y=50
					HDMI1_X=50 HDMI1_Y=50
					DP1_X=50 DP1_Y=50 ;;
			esac

			case "$(bspc query -M -m --names)" in
				"eDP1" | "eDP-1")
					xdotool windowmove $pid $EDP1_X% $EDP1_Y% ;;
				"HDMI1" | "HDMI-1")
					xdotool windowmove $pid $HDMI1_X% $HDMI1_Y% ;;
				*)
					xdotool windowmove $pid $DP1_X% $DP1_Y% ;;
			esac

			width=$(($(xdotool getwindowgeometry --shell $pid | grep WIDTH | awk -F "=" '{print $2}')/2))
			height=$(($(xdotool getwindowgeometry --shell $pid | grep HEIGHT | awk -F "=" '{print $2}')/2))
			xdotool windowmove --relative $pid -$width -$height
		fi
		bspc node $pid --flag hidden -f
	done
	exit

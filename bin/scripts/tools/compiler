#!/bin/sh

# tex files: Compiles to pdf, including bibliography if necessary
# md files: Compiles to pdf via pandoc
# rmd files: Compiles via R Markdown
# c files: Compiles via whatever compiler is set to cc. Usually gcc.
# py files: runs via python command
# go files: compiles and runs with "go run"
# config.h files: (For suckless utils) recompiles and installs program.
# all others: run `sent` to show a presentation

file=$(readlink -f "$*")
dir=$(dirname "$file")
base="${file%.*}"
basename=$(echo $base| rev | awk -v FS='/' '{print $1}' | rev)

cd "$dir" || exit

textype() { \
	if [[ $basename =~ ^.*[[:space:]]P[0-9]*$ ]]; then
		basename=$(echo $basename | sed 's/\(^.*\sP\)[0-9]*$/\100/' )
		base=$(echo $base | sed 's/\(^.*\sP\)[0-9]*$/\100/' )
	fi
	bibtex "$basename"
	command="pdflatex -shell-escape -file-line-error"
	if [ $basename == "poster" ]; then
		command="lualatex -shell-escape -file-line-error"
	fi
	( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
	$command --output-directory="$dir" "$base" &&
	grep -i addbibresource "$file" >/dev/null &&
	$command --output-directory="$dir" "$base"
	}

case "$file" in
	*\.ms) refer -PS -e "$file" | groff -me -ms -kept -T pdf > "$base".pdf ;;
	*\.mom) refer -PS -e "$file" | groff -mom -kept -T pdf > "$base".pdf ;;
	*\.[0-9]) refer -PS -e "$file" | groff -mandoc -T pdf > "$base".pdf ;;
	*\.[rR]md) Rscript -e "rmarkdown::render('$file', quiet=TRUE)" ;;
	*\.tex) textype "$file" ;;
	*\.md) pandoc -s -f markdown "$file" -t pdf -o "$base".pdf ;;
	*config.h) sudo make install ;;
  *\.c) cc "$file" -o "$base" && "$base" ;;
	*\.py) python "$file" ;;
	*\.m) octave "$file" ;;
	*\.scad) openscad -o "$base".stl "$file" ;;
	*\.go) go run "$file" ;;
	*\.sent) setsid sent "$file" 2>/dev/null & ;;
	*) sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac
